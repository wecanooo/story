{"version":3,"sources":["webpack:///path---jekyll-에서-gatsby-로-블로그-이사하기-a877d6e20ef43afda218.js","webpack:///./.cache/json/jekyll-에서-gatsby-로-블로그-이사하기.json"],"names":["webpackJsonp","467","module","exports","data","markdownRemark","html","timeToRead","excerpt","frontmatter","title","cover","date","category","tags","author","fields","slug","prev","next","authors","edges","node","id","name","image","url","bio","pathContext","total"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,4/SAA8sQC,WAAA,EAAAC,QAAA,4IAAAC,aAAi0DC,MAAA,8BAAAC,MAAA,oBAAAC,KAAA,2BAAAC,SAAA,OAAAC,MAAA,2BAAAC,OAAA,YAA6KC,QAAWC,KAAA,iCAAuCC,MAASV,QAAA,qGAAAC,aAA8HC,MAAA,qCAAAC,MAAA,oBAAAC,KAAA,cAA6FI,QAAWC,KAAA,sCAA4CE,MAASX,QAAA,gFAAAC,aAAyGC,MAAA,kCAAAC,MAAA,oBAAAC,KAAA,4BAAwGI,QAAWC,KAAA,oCAA0CG,SAAYC,QAAUC,MAAQC,GAAA,SAAAC,KAAA,cAAAC,MAAA,+CAAAC,IAAA,uBAAAC,IAAA,yPAAsXL,MAAQC,GAAA,WAAAC,KAAA,YAAAC,MAAA,+DAAAC,IAAA,2BAAAC,IAAA,oCAAqLL,MAAQC,GAAA,YAAAC,KAAA,mBAAAC,MAAA,mDAAAC,IAAA,wCAAAC,IAAA,8LAAuVC,aAAgBX,KAAA,+BAAAY,MAAA,EAAAX,KAAA,oCAAAC,KAAA","file":"path---jekyll-에서-gatsby-로-블로그-이사하기-a877d6e20ef43afda218.js","sourcesContent":["webpackJsonp([216663230764480],{\n\n/***/ 467:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>기존 <a href=\\\"https://wecanooo.github.com/blog/\\\">제 블로그</a>는 Jekyll 기반으로 만들어 Github 로 배포를 했습니다.\\n오랫동안 블로그를 방치하다가 근래 정리해야 할 것들이 있어서 다시 만지려고 하니 이제는 Jekyll 도 설치 중에 오류가 발생하기도 하고, 요즘엔 <a href=\\\"https://reactjs.org/\\\">React</a> 기반의 Static Site Generator 들이 대세인지라 이번참에 저도 블로그 환경을 새롭게 단장하기로 마음을 먹었습니다.</p>\\n<p>후보군을 보던 중 단연 눈에 띄는 것은 <a href=\\\"https://nextjs.org/\\\">Next.js</a> 와 <a href=\\\"https://www.gatsbyjs.org/\\\">Gatsby</a> 두가지의 React 기반 Generator 였습니다.</p>\\n<p>사실 예전부터 Next.js 는 개인적으로 관심을 많이 갖고 있던 Project 였으나, 회사에서 사용하고 있는 Gitlab 에서 제공되는 Gitlab CI  Template 중에 Gatsby 가 있는지라 이번참에 Gatsby 도 알아볼겸 Gatsby 로 옮기기로 했습니다.</p>\\n<p>Gatsby 를 이용하여 한땀한땀 블로그를 만들기엔 인생은 너무 짧고 해야할 일은 너무 많습니다. 제가 사용하고 있던 기존 블로그의 디자인을 그대로 이용하기로 마음을 먹고 찾아보니 역시 <a href=\\\"https://github.com/haysclark/gatsby-starter-casper\\\">Ghost 테마</a> 가 있었습니다.</p>\\n<hr>\\n<h3 id=\\\"gatsby-cli-설치하기\\\"><a href=\\\"#gatsby-cli-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Gatsby Cli 설치하기</h3>\\n<p><a href=\\\"https://github.com/haysclark/gatsby-starter-casper\\\">Ghost 테마</a> 에서 안내하는 것처럼 아래와 같이 자신의 블로그를 위한 Repository 를 생성해 줍니다. github repo 를 clone 해서 사용하는 방법도 있으나, 배포나 실행의 편의를 위해 gatsby-cli 를 설치하는 것을 추천합니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">npm install -g gatsby-cli</code></pre>\\n      </div>\\n<hr>\\n<h3 id=\\\"starter-를-이용하여-블로그-생성하기\\\"><a href=\\\"#starter-%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Starter 를 이용하여 블로그 생성하기</h3>\\n<p>gatsby cli 를 설치했다면 이제 gatsby command 로 블로그를 생성할 차례입니다. Gatsby 에서는 여러 유명한 Starter 들을 많이 제공하고 있어서 편리합니다. 저는 위에서 얘기한 것처럼 casper 라는 유명한 블로그 테마를 이용한 스타터를 이용했습니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">gatsby new 생성할폴더이름 https://github.com/haysclark/gatsby-starter-casper</code></pre>\\n      </div>\\n<p>위와 같이 설치한 뒤에는 간단하게 로컬에서 실행해 볼 수 있습니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">cd 생성된폴더이름\\ngatsby develop</code></pre>\\n      </div>\\n<p>실행 후에는 <a href=\\\"https://localhost:8000\\\">https://localhost:8000</a> 을 통해 로컬에서 실행되는 blog 를 확인하실 수 있습니다.</p>\\n<p><img src=\\\"/images/gatsby_develop.png\\\" alt=\\\"gatsby develop\\\"></p>\\n<p>여기까지 진행하면 기본적인 blog 만들기 준비는 끝이 났습니다. 이제부터 할 일은 data 폴더 내의 SiteConfig.js 파일을 본인의 취향에 맞게끔 수정해 나가면 됩니다. 자세한 설정은 <a href=\\\"https://github.com/haysclark/gatsby-starter-casper\\\">Ghost 테마 스타터</a> 의 SiteConfig 설정을 참고하면 쉽게 변경하실 수 있습니다.</p>\\n<hr>\\n<h3 id=\\\"github-에-블로그-배포하기\\\"><a href=\\\"#github-%EC%97%90-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Github 에 블로그 배포하기</h3>\\n<p>이제 Github 에 배포하는 방법은 간단합니다. </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">1. Gitlab 을 방문하여 로그인 한다.\\n2. New Repository 를 클릭하여 새로운 저장소를 생성한다.\\n3. 이때 저장소의 이름은 본인이 원하는 것으로 지정한다. (ex, blog)</code></pre>\\n      </div>\\n<p>위의 순서로 Repository 를 생성했다면 gatsby 를 통해 생성된 블로그 폴더로 이동하여 다음과 같이 명령을 수행합니다.\\n편의상 Github Repository 이름을 <code class=\\\"language-text\\\">blog</code> 로 정했다고 가정하겠습니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">git init\\ngit remote add origin https://github.com/계정이름/blog.git</code></pre>\\n      </div>\\n<p>위와같이 remote repository 를 연결했다면 이제 자신의 블로그 코드를 에디터로 열고 package.json 파일의 scripts 구문에 다음의 내용을 추가합니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">&quot;deploy&quot;: &quot;gatsby build --prefix-paths &amp;&amp; gh-pages -d public&quot;</code></pre>\\n      </div>\\n<p>package.json 내의 scripts 구문은 다음과 같은 형태가 될 것입니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"develop\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby develop\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"serve\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby serve\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"build\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby build\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"build:pp\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby build --prefix-paths\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"build:gh\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"npm run clean &amp;&amp; npm run build:pp &amp;&amp; gh-pages -d public\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"clean\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"rm -rf .cache &amp;&amp; rm -rf public\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"lint\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"npm run lint:js &amp;&amp; npm run lint:css &amp;&amp; npm run lint:md\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"lint:js\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"eslint --ext .js,.jsx --ignore-pattern public --ignore-pattern static .\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"lint:css\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"stylelint --fix 'src/**/*.css'\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"lint:md\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"remark content/posts/\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"write-good\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"write-good $(glob 'content/posts/**/*.md')\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"format:js\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"prettier '**/*.{js,jsx}' --write\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"release\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"standard-version -a\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"deploy\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby build --prefix-paths &amp;&amp; gh-pages -d public\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span></code></pre>\\n      </div>\\n<p>이제 Github 내의 gh-pages 브랜치로 배포하기 위해 npm package 를 설치합니다. (이미 설치가 되어 있다면 다음 과정은 생략해도 됩니다.)</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">npm install --save-dev gh-pages</code></pre>\\n      </div>\\n<p>여기까지 문제없이 진행되었다면 아래의 명령으로 Github 에 배포를 진행합니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">npm run deploy</code></pre>\\n      </div>\\n<p>위의 모든 과정이 정상적으로 수행이 되었다면 <a href=\\\"https://%EA%B3%84%EC%A0%95%EB%AA%85.github.com/blog/\\\">https://계정명.github.com/blog/</a> 에 본인이 생성한 블로그가 개설이 됩니다.</p>\\n<hr>\\n<h3 id=\\\"댓글-플러그인-붙이기\\\"><a href=\\\"#%EB%8C%93%EA%B8%80-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EB%B6%99%EC%9D%B4%EA%B8%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>댓글 플러그인 붙이기</h3>\\n<p><a href=\\\"https://github.com/haysclark/gatsby-starter-casper\\\">Ghost 테마 스타터</a> 에는 기본적으로 <a href=\\\"https://help.disqus.com/\\\">disqus</a> 댓글 플러그인이 연동되어 있습니다.\\ndisqus 가입 이후 발급된 short name 을 data/SiteConfig.js 파일 내에 있는 <code class=\\\"language-text\\\">disqusShortname</code> 설정값에 입력하기만 하면 모든 포스트에는 disqus comment 플러그인이 삽입이 됩니다.</p>\",\"timeToRead\":4,\"excerpt\":\"기존  제 블로그 는 Jekyll 기반으로 만들어 Github 로 배포를 했습니다.\\n오랫동안 블로그를 방치하다가 근래 정리해야 할 것들이 있어서 다시 만지려고 하니 이제는 Jekyll 도 설치 중에 오류가 발생하기도 하고, 요즘엔  React…\",\"frontmatter\":{\"title\":\"Jekyll 에서 Gatsby 로 블로그 이사하기\",\"cover\":\"images/cover4.jpg\",\"date\":\"2018-12-17T23:57:00.000Z\",\"category\":\"tech\",\"tags\":[\"jekyll\",\"react\",\"gatsby\"],\"author\":\"wecanooo\"},\"fields\":{\"slug\":\"/jekyll-에서-gatsby-로-블로그-이사하기\"}},\"prev\":{\"excerpt\":\" 이번 에피소드에서는  Github Pages 의 기능을 이용하여 간단한 블로그를 제작하는 방법을 알아보고자 한다. 많은 사람들이 블로그를 운영하기 위해서  Wordpress…\",\"frontmatter\":{\"title\":\"Github와 Jekyll을 이용한 무료 블로그 만들기 - 1\",\"cover\":\"images/cover7.jpg\",\"date\":\"2016-04-29\"},\"fields\":{\"slug\":\"/github와-jekyll을-이용한-무료-블로그-만들기-1\"}},\"next\":{\"excerpt\":\"최근에 개인적으로  Heroku  Free Tier를 이용하여 App을 배포하는 경우가 생겼는데 Puma + Sidekiq + Redis…\",\"frontmatter\":{\"title\":\"Heroku 환경에서 Sidekiq, Redis 이용하기\",\"cover\":\"images/cover6.jpg\",\"date\":\"2016-05-26T20:12:00.000Z\"},\"fields\":{\"slug\":\"/heroku-환경에서-sidekiq-redis-이용하기\"}},\"authors\":{\"edges\":[{\"node\":{\"id\":\"casper\",\"name\":\"Casper User\",\"image\":\"https://api.adorable.io/avatars/150/test.png\",\"url\":\"http://gatsbyjs.org/\",\"bio\":\"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\"}},{\"node\":{\"id\":\"wecanooo\",\"name\":\"Eric Jang\",\"image\":\"https://api.adorable.io/avatars/150/wecanooo@adorable.io.png\",\"url\":\"http://about.me/wecanooo\",\"bio\":\"루비온레일즈를 좋아하고, 여행을 좋아하는 개발자입니다.\"}},{\"node\":{\"id\":\"guinevere\",\"name\":\"Guinevere Kuiper\",\"image\":\"https://randomuser.me/api/portraits/women/17.jpg\",\"url\":\"https://randomuser.me/api/?seed=user1\",\"bio\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam laoreet lorem nec ligula aliquet, porta blandit augue luctus. Vivamus ac quam diam. Sed vestibulum pharetra hendrerit.\"}}]}},\"pathContext\":{\"slug\":\"/jekyll-에서-gatsby-로-블로그-이사하기\",\"total\":7,\"prev\":\"/github와-jekyll을-이용한-무료-블로그-만들기-1\",\"next\":\"/heroku-환경에서-sidekiq-redis-이용하기\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---jekyll-에서-gatsby-로-블로그-이사하기-a877d6e20ef43afda218.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>기존 <a href=\\\"https://wecanooo.github.com/blog/\\\">제 블로그</a>는 Jekyll 기반으로 만들어 Github 로 배포를 했습니다.\\n오랫동안 블로그를 방치하다가 근래 정리해야 할 것들이 있어서 다시 만지려고 하니 이제는 Jekyll 도 설치 중에 오류가 발생하기도 하고, 요즘엔 <a href=\\\"https://reactjs.org/\\\">React</a> 기반의 Static Site Generator 들이 대세인지라 이번참에 저도 블로그 환경을 새롭게 단장하기로 마음을 먹었습니다.</p>\\n<p>후보군을 보던 중 단연 눈에 띄는 것은 <a href=\\\"https://nextjs.org/\\\">Next.js</a> 와 <a href=\\\"https://www.gatsbyjs.org/\\\">Gatsby</a> 두가지의 React 기반 Generator 였습니다.</p>\\n<p>사실 예전부터 Next.js 는 개인적으로 관심을 많이 갖고 있던 Project 였으나, 회사에서 사용하고 있는 Gitlab 에서 제공되는 Gitlab CI  Template 중에 Gatsby 가 있는지라 이번참에 Gatsby 도 알아볼겸 Gatsby 로 옮기기로 했습니다.</p>\\n<p>Gatsby 를 이용하여 한땀한땀 블로그를 만들기엔 인생은 너무 짧고 해야할 일은 너무 많습니다. 제가 사용하고 있던 기존 블로그의 디자인을 그대로 이용하기로 마음을 먹고 찾아보니 역시 <a href=\\\"https://github.com/haysclark/gatsby-starter-casper\\\">Ghost 테마</a> 가 있었습니다.</p>\\n<hr>\\n<h3 id=\\\"gatsby-cli-설치하기\\\"><a href=\\\"#gatsby-cli-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Gatsby Cli 설치하기</h3>\\n<p><a href=\\\"https://github.com/haysclark/gatsby-starter-casper\\\">Ghost 테마</a> 에서 안내하는 것처럼 아래와 같이 자신의 블로그를 위한 Repository 를 생성해 줍니다. github repo 를 clone 해서 사용하는 방법도 있으나, 배포나 실행의 편의를 위해 gatsby-cli 를 설치하는 것을 추천합니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">npm install -g gatsby-cli</code></pre>\\n      </div>\\n<hr>\\n<h3 id=\\\"starter-를-이용하여-블로그-생성하기\\\"><a href=\\\"#starter-%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Starter 를 이용하여 블로그 생성하기</h3>\\n<p>gatsby cli 를 설치했다면 이제 gatsby command 로 블로그를 생성할 차례입니다. Gatsby 에서는 여러 유명한 Starter 들을 많이 제공하고 있어서 편리합니다. 저는 위에서 얘기한 것처럼 casper 라는 유명한 블로그 테마를 이용한 스타터를 이용했습니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">gatsby new 생성할폴더이름 https://github.com/haysclark/gatsby-starter-casper</code></pre>\\n      </div>\\n<p>위와 같이 설치한 뒤에는 간단하게 로컬에서 실행해 볼 수 있습니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">cd 생성된폴더이름\\ngatsby develop</code></pre>\\n      </div>\\n<p>실행 후에는 <a href=\\\"https://localhost:8000\\\">https://localhost:8000</a> 을 통해 로컬에서 실행되는 blog 를 확인하실 수 있습니다.</p>\\n<p><img src=\\\"/images/gatsby_develop.png\\\" alt=\\\"gatsby develop\\\"></p>\\n<p>여기까지 진행하면 기본적인 blog 만들기 준비는 끝이 났습니다. 이제부터 할 일은 data 폴더 내의 SiteConfig.js 파일을 본인의 취향에 맞게끔 수정해 나가면 됩니다. 자세한 설정은 <a href=\\\"https://github.com/haysclark/gatsby-starter-casper\\\">Ghost 테마 스타터</a> 의 SiteConfig 설정을 참고하면 쉽게 변경하실 수 있습니다.</p>\\n<hr>\\n<h3 id=\\\"github-에-블로그-배포하기\\\"><a href=\\\"#github-%EC%97%90-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Github 에 블로그 배포하기</h3>\\n<p>이제 Github 에 배포하는 방법은 간단합니다. </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">1. Gitlab 을 방문하여 로그인 한다.\\n2. New Repository 를 클릭하여 새로운 저장소를 생성한다.\\n3. 이때 저장소의 이름은 본인이 원하는 것으로 지정한다. (ex, blog)</code></pre>\\n      </div>\\n<p>위의 순서로 Repository 를 생성했다면 gatsby 를 통해 생성된 블로그 폴더로 이동하여 다음과 같이 명령을 수행합니다.\\n편의상 Github Repository 이름을 <code class=\\\"language-text\\\">blog</code> 로 정했다고 가정하겠습니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">git init\\ngit remote add origin https://github.com/계정이름/blog.git</code></pre>\\n      </div>\\n<p>위와같이 remote repository 를 연결했다면 이제 자신의 블로그 코드를 에디터로 열고 package.json 파일의 scripts 구문에 다음의 내용을 추가합니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">&quot;deploy&quot;: &quot;gatsby build --prefix-paths &amp;&amp; gh-pages -d public&quot;</code></pre>\\n      </div>\\n<p>package.json 내의 scripts 구문은 다음과 같은 형태가 될 것입니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"develop\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby develop\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"serve\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby serve\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"build\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby build\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"build:pp\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby build --prefix-paths\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"build:gh\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"npm run clean &amp;&amp; npm run build:pp &amp;&amp; gh-pages -d public\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"clean\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"rm -rf .cache &amp;&amp; rm -rf public\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"lint\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"npm run lint:js &amp;&amp; npm run lint:css &amp;&amp; npm run lint:md\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"lint:js\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"eslint --ext .js,.jsx --ignore-pattern public --ignore-pattern static .\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"lint:css\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"stylelint --fix 'src/**/*.css'\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"lint:md\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"remark content/posts/\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"write-good\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"write-good $(glob 'content/posts/**/*.md')\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"format:js\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"prettier '**/*.{js,jsx}' --write\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"release\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"standard-version -a\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"deploy\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby build --prefix-paths &amp;&amp; gh-pages -d public\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span></code></pre>\\n      </div>\\n<p>이제 Github 내의 gh-pages 브랜치로 배포하기 위해 npm package 를 설치합니다. (이미 설치가 되어 있다면 다음 과정은 생략해도 됩니다.)</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">npm install --save-dev gh-pages</code></pre>\\n      </div>\\n<p>여기까지 문제없이 진행되었다면 아래의 명령으로 Github 에 배포를 진행합니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">npm run deploy</code></pre>\\n      </div>\\n<p>위의 모든 과정이 정상적으로 수행이 되었다면 <a href=\\\"https://%EA%B3%84%EC%A0%95%EB%AA%85.github.com/blog/\\\">https://계정명.github.com/blog/</a> 에 본인이 생성한 블로그가 개설이 됩니다.</p>\\n<hr>\\n<h3 id=\\\"댓글-플러그인-붙이기\\\"><a href=\\\"#%EB%8C%93%EA%B8%80-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EB%B6%99%EC%9D%B4%EA%B8%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>댓글 플러그인 붙이기</h3>\\n<p><a href=\\\"https://github.com/haysclark/gatsby-starter-casper\\\">Ghost 테마 스타터</a> 에는 기본적으로 <a href=\\\"https://help.disqus.com/\\\">disqus</a> 댓글 플러그인이 연동되어 있습니다.\\ndisqus 가입 이후 발급된 short name 을 data/SiteConfig.js 파일 내에 있는 <code class=\\\"language-text\\\">disqusShortname</code> 설정값에 입력하기만 하면 모든 포스트에는 disqus comment 플러그인이 삽입이 됩니다.</p>\",\"timeToRead\":4,\"excerpt\":\"기존  제 블로그 는 Jekyll 기반으로 만들어 Github 로 배포를 했습니다.\\n오랫동안 블로그를 방치하다가 근래 정리해야 할 것들이 있어서 다시 만지려고 하니 이제는 Jekyll 도 설치 중에 오류가 발생하기도 하고, 요즘엔  React…\",\"frontmatter\":{\"title\":\"Jekyll 에서 Gatsby 로 블로그 이사하기\",\"cover\":\"images/cover4.jpg\",\"date\":\"2018-12-17T23:57:00.000Z\",\"category\":\"tech\",\"tags\":[\"jekyll\",\"react\",\"gatsby\"],\"author\":\"wecanooo\"},\"fields\":{\"slug\":\"/jekyll-에서-gatsby-로-블로그-이사하기\"}},\"prev\":{\"excerpt\":\" 이번 에피소드에서는  Github Pages 의 기능을 이용하여 간단한 블로그를 제작하는 방법을 알아보고자 한다. 많은 사람들이 블로그를 운영하기 위해서  Wordpress…\",\"frontmatter\":{\"title\":\"Github와 Jekyll을 이용한 무료 블로그 만들기 - 1\",\"cover\":\"images/cover7.jpg\",\"date\":\"2016-04-29\"},\"fields\":{\"slug\":\"/github와-jekyll을-이용한-무료-블로그-만들기-1\"}},\"next\":{\"excerpt\":\"최근에 개인적으로  Heroku  Free Tier를 이용하여 App을 배포하는 경우가 생겼는데 Puma + Sidekiq + Redis…\",\"frontmatter\":{\"title\":\"Heroku 환경에서 Sidekiq, Redis 이용하기\",\"cover\":\"images/cover6.jpg\",\"date\":\"2016-05-26T20:12:00.000Z\"},\"fields\":{\"slug\":\"/heroku-환경에서-sidekiq-redis-이용하기\"}},\"authors\":{\"edges\":[{\"node\":{\"id\":\"casper\",\"name\":\"Casper User\",\"image\":\"https://api.adorable.io/avatars/150/test.png\",\"url\":\"http://gatsbyjs.org/\",\"bio\":\"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\"}},{\"node\":{\"id\":\"wecanooo\",\"name\":\"Eric Jang\",\"image\":\"https://api.adorable.io/avatars/150/wecanooo@adorable.io.png\",\"url\":\"http://about.me/wecanooo\",\"bio\":\"루비온레일즈를 좋아하고, 여행을 좋아하는 개발자입니다.\"}},{\"node\":{\"id\":\"guinevere\",\"name\":\"Guinevere Kuiper\",\"image\":\"https://randomuser.me/api/portraits/women/17.jpg\",\"url\":\"https://randomuser.me/api/?seed=user1\",\"bio\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam laoreet lorem nec ligula aliquet, porta blandit augue luctus. Vivamus ac quam diam. Sed vestibulum pharetra hendrerit.\"}}]}},\"pathContext\":{\"slug\":\"/jekyll-에서-gatsby-로-블로그-이사하기\",\"total\":7,\"prev\":\"/github와-jekyll을-이용한-무료-블로그-만들기-1\",\"next\":\"/heroku-환경에서-sidekiq-redis-이용하기\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/jekyll-에서-gatsby-로-블로그-이사하기.json\n// module id = 467\n// module chunks = 216663230764480"],"sourceRoot":""}