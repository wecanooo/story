webpackJsonp([0x89380c398bee],{480:function(s,n){s.exports={data:{markdownRemark:{html:'<p>최근에 개인적으로 <a href="http://heroku.com/">Heroku</a> Free Tier를 이용하여 App을 배포하는 경우가 생겼는데 Puma + Sidekiq + Redis 환경을 설정하는데 좀 삽질을 한 경험이 있어 정리하고자 한다.</p>\n<h3 id="gem-설정"><a href="#gem-%EC%84%A4%EC%A0%95" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Gem 설정</h3>\n<div class="gatsby-highlight">\n      <pre class="language-ruby"><code class="language-ruby">gem <span class="token string">\'rails\'</span><span class="token punctuation">,</span> <span class="token string">\'4.2.6\'</span>\ngem <span class="token string">\'puma\'</span><span class="token punctuation">,</span> <span class="token string">\'~> 2.15\'</span>\ngem <span class="token string">\'sidekiq\'</span><span class="token punctuation">,</span> <span class="token string">\'~> 4.0\'</span></code></pre>\n      </div>\n<p>이전에 진행했었던 프로젝트에서는 puma 대신 unicorn을 이용했었는데, Heroku 환경에서는 puma가 default이고 최근 많이들 unicorn에서 puma로 넘어가는 추세인 것 같아 puma를 이용하기로 했다.</p>\n<h3 id="프로그램-설정-및-heroku-설정"><a href="#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EC%84%A4%EC%A0%95-%EB%B0%8F-heroku-%EC%84%A4%EC%A0%95" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>프로그램 설정 및 Heroku 설정</h3>\n<div class="gatsby-highlight">\n      <pre class="language-ruby"><code class="language-ruby"><span class="token comment"># config/puma.rb</span>\n\nworkers <span class="token function">Integer</span><span class="token punctuation">(</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">\'WEB_CONCURRENCY\'</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">2</span><span class="token punctuation">)</span>\nthreads_count <span class="token operator">=</span> <span class="token function">Integer</span><span class="token punctuation">(</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">\'MAX_THREADS\'</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">5</span><span class="token punctuation">)</span>\nthreads threads_count<span class="token punctuation">,</span> threads_count\n\npreload_app<span class="token operator">!</span>\n\nrackup      <span class="token constant">DefaultRackup</span>\nport        <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">\'PORT\'</span><span class="token punctuation">]</span>     <span class="token operator">||</span> <span class="token number">3000</span>\nenvironment <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">\'RACK_ENV\'</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">\'development\'</span>\n\non_worker_boot <span class="token keyword">do</span>\n  <span class="token comment"># Worker specific setup for Rails 4.1+</span>\n  <span class="token comment"># See: https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server#on-worker-boot</span>\n  <span class="token variable">@sidekiq_pid</span> <span class="token operator">||</span><span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">\'bundle exec sidekiq -c 2 -q default -q mailer\'</span><span class="token punctuation">)</span>\n  <span class="token constant">ActiveRecord</span><span class="token punctuation">:</span><span class="token symbol">:Base</span><span class="token punctuation">.</span>establish_connection\n<span class="token keyword">end</span></code></pre>\n      </div>\n<p>puma가 시작될 때 sidekiq을 몇 가지 옵션과 함께 실행도로록 했다. queue는 default, mailer queue를 생성했다.\n이제 heroku에서 web instance를 실행하기 위해 Procfile을 작성할 차례이다.</p>\n<p>예전에 unicorn 환경에서 배포를 할 때는 아래와 같이 web과 redis, worker를 별도로 돌렸었다.</p>\n<div class="gatsby-highlight">\n      <pre class="language-ruby"><code class="language-ruby"><span class="token comment"># Procfile with unicorn + nginx + ubuntu 14.04</span>\n\nweb<span class="token punctuation">:</span> rails s <span class="token operator">-</span>b <span class="token number">0.0</span><span class="token punctuation">.</span><span class="token number">0.0</span>\nredis<span class="token punctuation">:</span> redis<span class="token operator">-</span>server\nworker<span class="token punctuation">:</span> bundle exec sidekiq <span class="token operator">-</span><span class="token constant">C</span> config<span class="token operator">/</span>sidekiq<span class="token punctuation">.</span>yml</code></pre>\n      </div>\n<p>지금은 Heroku에 배포할 것이기 때문에 redis-server는 Heroku redistogo add-on 으로 대체하고, sidekiq은 puma 시작 시 같이 실행하도록 할 것이기 때문에 Procfile은 좀 더 간단하게 유지할 수 있다.</p>\n<div class="gatsby-highlight">\n      <pre class="language-ruby"><code class="language-ruby"><span class="token comment"># Procfile with puma + heroku</span>\n\nweb<span class="token punctuation">:</span> bundle exec puma <span class="token operator">-</span><span class="token constant">C</span> config<span class="token operator">/</span>puma<span class="token punctuation">.</span>rb</code></pre>\n      </div>\n<p>이제 위에서 말한 <a href="https://elements.heroku.com/addons/redistogo">redistogo</a>를 설치하고 환경설정 값을 지정할 차례다.\n터미널에서 아래의 명령을 실행하자. <a href="https://toolbelt.heroku.com/">Heroku Toolbelt</a>는 이미 설치되어 있다고 가정한다.</p>\n<div class="gatsby-highlight">\n      <pre class="language-shell"><code class="language-shell">$ heroku addons:create redistogo\n$ heroku config:set REDIS_PROVIDER=REDISTOGO_URL</code></pre>\n      </div>\n<p>Heroku에 sidekiq + redis를 통해 ActiveJob을 돌릴 수 있는 준비는 되었고, ActiveJob Adapter를 sidekiq으로 지정하기 위해 ActiveJob Queue Adapter를 sidekiq으로 지정한다.</p>\n<div class="gatsby-highlight">\n      <pre class="language-ruby"><code class="language-ruby"><span class="token comment"># config/application.rb</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token operator">&lt;</span> <span class="token constant">Rails</span><span class="token punctuation">:</span><span class="token symbol">:Application</span>\n\n  config<span class="token punctuation">.</span>active_job<span class="token punctuation">.</span>queue_adapter <span class="token operator">=</span> <span class="token symbol">:sidekiq</span>\n\n<span class="token keyword">end</span></code></pre>\n      </div>\n<h3 id="rails-코딩"><a href="#rails-%EC%BD%94%EB%94%A9" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Rails 코딩</h3>\n<p>환영 메일을 보내기 위한 Mailer 생성</p>\n<div class="gatsby-highlight">\n      <pre class="language-shell"><code class="language-shell">$ rails generator mailer UserMailer</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-ruby"><code class="language-ruby"><span class="token comment"># app/mailer/user_mailer.rb</span>\n\n<span class="token keyword">class</span> <span class="token class-name">UserMailer</span> <span class="token operator">&lt;</span> <span class="token constant">ApplicationMailer</span>\n\n  <span class="token keyword">def</span> <span class="token function">welcome_email</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>\n    <span class="token variable">@user</span> <span class="token operator">=</span> user\n    mail to<span class="token punctuation">:</span> <span class="token variable">@user</span><span class="token punctuation">.</span>email<span class="token punctuation">,</span> subject<span class="token punctuation">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">\'email.welcome.subject\'</span><span class="token punctuation">)</span> <span class="token keyword">unless</span> <span class="token variable">@user</span><span class="token punctuation">.</span>email<span class="token punctuation">.</span>empty<span class="token operator">?</span>\n  <span class="token keyword">end</span>\n\n<span class="token keyword">end</span></code></pre>\n      </div>\n<p>환영메일 전송을 백그라운드에서 처리하기 위해 ActiveJob 생성</p>\n<div class="gatsby-highlight">\n      <pre class="language-shell"><code class="language-shell">$ rails generator job welcome_email --queue mailer</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-ruby"><code class="language-ruby"><span class="token comment"># app/jobs/welcome_email_job.rb</span>\n\n<span class="token keyword">class</span> <span class="token class-name">WelcomeEmailJob</span> <span class="token operator">&lt;</span> <span class="token constant">ActiveJob</span><span class="token punctuation">:</span><span class="token symbol">:Base</span>\n  queue_as <span class="token symbol">:mailer</span>\n\n  <span class="token keyword">def</span> <span class="token function">perform</span><span class="token punctuation">(</span>user_id<span class="token punctuation">)</span>\n    user <span class="token operator">=</span> <span class="token constant">User</span><span class="token punctuation">.</span><span class="token function">find_by</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> user_id<span class="token punctuation">)</span>\n    <span class="token constant">UserMailer</span><span class="token punctuation">.</span><span class="token function">welcome_email</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span>deliver_now <span class="token keyword">if</span> user\n  <span class="token keyword">end</span>\n<span class="token keyword">end</span></code></pre>\n      </div>\n<p>이제 최종적으로 회원가입을 통해 사용자가 생성되었을 경우 환영메일을 전송</p>\n<div class="gatsby-highlight">\n      <pre class="language-ruby"><code class="language-ruby"><span class="token comment"># app/models/user.rb</span>\n\n<span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token operator">&lt;</span> <span class="token constant">ActiveRecord</span><span class="token punctuation">:</span><span class="token symbol">:Base</span>\n\n  after_create <span class="token symbol">:process_after_create!</span>\n\n  private\n\n    <span class="token keyword">def</span> process_after_create<span class="token operator">!</span>\n      <span class="token keyword">self</span><span class="token punctuation">.</span>access_token <span class="token operator">=</span> generate_access_token\n      <span class="token keyword">if</span> save<span class="token operator">!</span>\n        <span class="token comment"># 환영메일 전송</span>\n        <span class="token constant">WelcomeEmailJob</span><span class="token punctuation">.</span><span class="token function">perform_later</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span>\n      <span class="token keyword">end</span>\n    <span class="token keyword">end</span>\n\n    <span class="token keyword">def</span> generate_access_token\n      loop <span class="token keyword">do</span>\n        token <span class="token operator">=</span> <span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span><span class="token keyword">self</span><span class="token punctuation">.</span>id<span class="token delimiter tag">}</span></span>:<span class="token interpolation"><span class="token delimiter tag">#{</span>Devise<span class="token punctuation">.</span>friendly_token<span class="token delimiter tag">}</span></span>"</span>\n        <span class="token keyword">break</span> token <span class="token keyword">unless</span> <span class="token constant">User</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>access_token<span class="token punctuation">:</span> token<span class="token punctuation">)</span><span class="token punctuation">.</span>first\n      <span class="token keyword">end</span>\n    <span class="token keyword">end</span>\n\n<span class="token keyword">end</span></code></pre>\n      </div>\n<p>이메일을 비동기로 전송할 수 있는 방법은 위의 방법 외에도 더 좋은 방법들이 있을 수 있다.\n개인적인 코딩 취향에 따라 작성하면 된다.</p>',timeToRead:3,excerpt:"최근에 개인적으로  Heroku  Free Tier를 이용하여 App을 배포하는 경우가 생겼는데 Puma + Sidekiq + Redis 환경을 설정하는데 좀 삽질을 한 경험이 있어 정리하고자 한다. Gem…",frontmatter:{title:"Heroku 환경에서 Sidekiq, Redis 이용하기",cover:"https://st-kr-tutor.s3-ap-northeast-2.amazonaws.com/got/87836b5eb053590be9fc6d495e7858fc/cover6.jpg",date:"2016-05-26T20:12:00.000Z",category:"tech",tags:["sidekiq","redis","heroku"],author:"wecanooo"},fields:{slug:"/heroku-환경에서-sidekiq-redis-이용하기"}},prev:{excerpt:"기존  제 블로그 는 Jekyll 기반으로 만들어 Github 로 배포를 했습니다.\n오랫동안 블로그를 방치하다가 근래 정리해야 할 것들이 있어서 다시 만지려고 하니 이제는 Jekyll…",frontmatter:{title:"Jekyll 에서 Gatsby 로 블로그 이사하기",cover:"https://st-kr-tutor.s3-ap-northeast-2.amazonaws.com/got/87836b5eb053590be9fc6d495e7858fc/cover7.jpg",date:"2018-12-17T23:57:00.000Z"},fields:{slug:"/jekyll-에서-gatsby-로-블로그-이사하기"}},next:{excerpt:"원문 :  http://www.tiobe.com/tiobe_index 2016년 5월 TIOBE Index 헤드라인 : 루비가 과거 루비의 가장 높은 순위와 같아지다. 루비가 현재 TIOBE Index…",frontmatter:{title:"2016년 5월 TIOBE 순위",cover:"https://st-kr-tutor.s3-ap-northeast-2.amazonaws.com/got/87836b5eb053590be9fc6d495e7858fc/cover6.jpg",date:"2016-05-12T08:00:00.000Z"},fields:{slug:"/2016-년-5-월-tiobe-순위"}},authors:{edges:[{node:{id:"wecanooo",name:"Eric Jang",image:"https://api.adorable.io/avatars/150/wecanooo@adorable.io.png",url:"http://about.me/wecanooo",bio:"루비온레일즈를 좋아하고, 여행을 좋아하는 개발자입니다."}},{node:{id:"casper",name:"Casper User",image:"https://api.adorable.io/avatars/150/test.png",url:"http://gatsbyjs.org/",bio:"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people."}},{node:{id:"guinevere",name:"Guinevere Kuiper",image:"https://randomuser.me/api/portraits/women/17.jpg",url:"https://randomuser.me/api/?seed=user1",bio:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam laoreet lorem nec ligula aliquet, porta blandit augue luctus. Vivamus ac quam diam. Sed vestibulum pharetra hendrerit."}}]}},pathContext:{slug:"/heroku-환경에서-sidekiq-redis-이용하기",total:10,prev:"/jekyll-에서-gatsby-로-블로그-이사하기",next:"/2016-년-5-월-tiobe-순위"}}}});
//# sourceMappingURL=path---heroku-환경에서-sidekiq-redis-이용하기-5dd036b98e22ef558b3f.js.map