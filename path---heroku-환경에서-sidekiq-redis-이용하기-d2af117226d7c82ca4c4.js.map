{"version":3,"sources":["webpack:///path---heroku-환경에서-sidekiq-redis-이용하기-d2af117226d7c82ca4c4.js","webpack:///./.cache/json/heroku-환경에서-sidekiq-redis-이용하기.json"],"names":["webpackJsonp","462","module","exports","data","markdownRemark","html","timeToRead","excerpt","frontmatter","title","cover","date","category","tags","author","fields","slug","prev","next","authors","edges","node","id","name","image","url","bio","pathContext","total"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,8jWAAsuWC,WAAA,EAAAC,QAAA,4IAA6OC,aAAkCC,MAAA,kCAAAC,MAAA,oBAAAC,KAAA,2BAAAC,SAAA,OAAAC,MAAA,4BAAAC,OAAA,YAAkLC,QAAWC,KAAA,oCAA0CC,MAASV,QAAA,qGAAAC,aAA8HC,MAAA,qCAAAC,MAAA,oBAAAC,KAAA,cAA6FI,QAAWC,KAAA,sCAA4CE,MAASX,QAAA,oHAAAC,aAA6IC,MAAA,oBAAAC,MAAA,oBAAAC,KAAA,4BAA0FI,QAAWC,KAAA,yBAA+BG,SAAYC,QAAUC,MAAQC,GAAA,YAAAC,KAAA,mBAAAC,MAAA,mDAAAC,IAAA,wCAAAC,IAAA,4LAAsVL,MAAQC,GAAA,WAAAC,KAAA,YAAAC,MAAA,+DAAAC,IAAA,2BAAAC,IAAA,oCAAqLL,MAAQC,GAAA,SAAAC,KAAA,cAAAC,MAAA,+CAAAC,IAAA,uBAAAC,IAAA,2PAAuXC,aAAgBX,KAAA,kCAAAY,MAAA,EAAAX,KAAA,oCAAAC,KAAA","file":"path---heroku-환경에서-sidekiq-redis-이용하기-d2af117226d7c82ca4c4.js","sourcesContent":["webpackJsonp([150873816271854],{\n\n/***/ 462:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>최근에 개인적으로 <a href=\\\"http://heroku.com/\\\">Heroku</a> Free Tier를 이용하여 App을 배포하는 경우가 생겼는데 Puma + Sidekiq + Redis 환경을 설정하는데 좀 삽질을 한 경험이 있어 정리하고자 한다.</p>\\n<h3 id=\\\"gem-설정\\\"><a href=\\\"#gem-%EC%84%A4%EC%A0%95\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Gem 설정</h3>\\n<p>{% highlight ruby %}\\ngem 'rails', '4.2.6'\\ngem 'puma', '~> 2.15'\\ngem 'sidekiq', '~> 4.0'\\n{% endhighlight %}</p>\\n<p>이전에 진행했었던 프로젝트에서는 puma 대신 unicorn을 이용했었는데, Heroku 환경에서는 puma가 default이고 최근 많이들 unicorn에서 puma로 넘어가는 추세인 것 같아 puma를 이용하기로 했다.</p>\\n<h3 id=\\\"프로그램-설정-및-heroku-설정\\\"><a href=\\\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EC%84%A4%EC%A0%95-%EB%B0%8F-heroku-%EC%84%A4%EC%A0%95\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>프로그램 설정 및 Heroku 설정</h3>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"configpumarb\\\"><a href=\\\"#configpumarb\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>config/puma.rb</h1>\\n<p>workers Integer(ENV['WEB_CONCURRENCY'] || 2)\\nthreads<em>count = Integer(ENV['MAX</em>THREADS'] || 5)\\nthreads threads<em>count, threads</em>count</p>\\n<p>preload_app!</p>\\n<p>rackup      DefaultRackup\\nport        ENV['PORT']     || 3000\\nenvironment ENV['RACK_ENV'] || 'development'</p>\\n<p>on<em>worker</em>boot do</p>\\n<h1 id=\\\"worker-specific-setup-for-rails-41\\\"><a href=\\\"#worker-specific-setup-for-rails-41\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Worker specific setup for Rails 4.1+</h1>\\n<h1 id=\\\"see-httpsdevcenterherokucomarticlesdeploying-rails-applications-with-the-puma-web-serveron-worker-boot\\\"><a href=\\\"#see-httpsdevcenterherokucomarticlesdeploying-rails-applications-with-the-puma-web-serveron-worker-boot\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>See: <a href=\\\"https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server#on-worker-boot\\\">https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server#on-worker-boot</a></h1>\\n<p>  @sidekiq<em>pid ||= spawn('bundle exec sidekiq -c 2 -q default -q mailer')\\nActiveRecord::Base.establish</em>connection\\nend</p>\\n<p>{% endhighlight %}</p>\\n<p>puma가 시작될 때 sidekiq을 몇 가지 옵션과 함께 실행도로록 했다. queue는 default, mailer queue를 생성했다.\\n이제 heroku에서 web instance를 실행하기 위해 Procfile을 작성할 차례이다.</p>\\n<p>예전에 unicorn 환경에서 배포를 할 때는 아래와 같이 web과 redis, worker를 별도로 돌렸었다.</p>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"procfile-with-unicorn--nginx--ubuntu-1404\\\"><a href=\\\"#procfile-with-unicorn--nginx--ubuntu-1404\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Procfile with unicorn + nginx + ubuntu 14.04</h1>\\n<p>web: rails s -b 0.0.0.0\\nredis: redis-server\\nworker: bundle exec sidekiq -C config/sidekiq.yml\\n{% endhighlight %}</p>\\n<p>지금은 Heroku에 배포할 것이기 때문에 redis-server는 Heroku redistogo add-on 으로 대체하고, sidekiq은 puma 시작 시 같이 실행하도록 할 것이기 때문에 Procfile은 좀 더 간단하게 유지할 수 있다.</p>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"procfile-with-puma--heroku\\\"><a href=\\\"#procfile-with-puma--heroku\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Procfile with puma + heroku</h1>\\n<p>web: bundle exec puma -C config/puma.rb\\n{% endhighlight %}</p>\\n<p>이제 위에서 말한 <a href=\\\"https://elements.heroku.com/addons/redistogo\\\">redistogo</a>를 설치하고 환경설정 값을 지정할 차례다.\\n터미널에서 아래의 명령을 실행하자. <a href=\\\"https://toolbelt.heroku.com/\\\">Heroku Toolbelt</a>는 이미 설치되어 있다고 가정한다.</p>\\n<p>{% highlight shell %}\\n$ heroku addons:create redistogo\\n$ heroku config:set REDIS<em>PROVIDER=REDISTOGO</em>URL\\n{% endhighlight %}</p>\\n<p>Heroku에 sidekiq + redis를 통해 ActiveJob을 돌릴 수 있는 준비는 되었고, ActiveJob Adapter를 sidekiq으로 지정하기 위해 ActiveJob Queue Adapter를 sidekiq으로 지정한다.</p>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"configapplicationrb\\\"><a href=\\\"#configapplicationrb\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>config/application.rb</h1>\\n<p>class Application &#x3C; Rails::Application</p>\\n<p>  config.active<em>job.queue</em>adapter = :sidekiq</p>\\n<p>end\\n{% endhighlight %}</p>\\n<h3 id=\\\"rails-코딩\\\"><a href=\\\"#rails-%EC%BD%94%EB%94%A9\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Rails 코딩</h3>\\n<p>환영 메일을 보내기 위한 Mailer 생성</p>\\n<p>{% highlight shell %}\\n$ rails generator mailer UserMailer\\n{% endhighlight %}</p>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"appmaileruser_mailerrb\\\"><a href=\\\"#appmaileruser_mailerrb\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>app/mailer/user_mailer.rb</h1>\\n<p>class UserMailer &#x3C; ApplicationMailer</p>\\n<p>  def welcome_email(user)\\n@user = user\\nmail to: @user.email, subject: t('email.welcome.subject') unless @user.email.empty?\\nend</p>\\n<p>end</p>\\n<p>{% endhighlight %}</p>\\n<p>환영메일 전송을 백그라운드에서 처리하기 위해 ActiveJob 생성</p>\\n<p>{% highlight shell %}\\n$ rails generator job welcome_email --queue mailer\\n{% endhighlight %}</p>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"appjobswelcomeemailjobrb\\\"><a href=\\\"#appjobswelcomeemailjobrb\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>app/jobs/welcome<em>email</em>job.rb</h1>\\n<p>class WelcomeEmailJob &#x3C; ActiveJob::Base\\nqueue_as :mailer</p>\\n<p>  def perform(user<em>id)\\nuser = User.find</em>by(id: user<em>id)\\nUserMailer.welcome</em>email(user).deliver_now if user\\nend\\nend</p>\\n<p>{% endhighlight %}</p>\\n<p>이제 최종적으로 회원가입을 통해 사용자가 생성되었을 경우 환영메일을 전송</p>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"appmodelsuserrb\\\"><a href=\\\"#appmodelsuserrb\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>app/models/user.rb</h1>\\n<p>class User &#x3C; ActiveRecord::Base</p>\\n<p>  after<em>create :process</em>after_create!</p>\\n<p>  private</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">def process_after_create!\\n  self.access_token = generate_access_token\\n  if save!\\n    # 환영메일 전송\\n    WelcomeEmailJob.perform_later(self.id)\\n  end\\nend\\n\\ndef generate_access_token\\n  loop do\\n    token = &quot;#{self.id}:#{Devise.friendly_token}&quot;\\n    break token unless User.where(access_token: token).first\\n  end\\nend</code></pre>\\n      </div>\\n<p>end</p>\\n<p>{% endhighlight %}</p>\\n<p>이메일을 비동기로 전송할 수 있는 방법은 위의 방법 외에도 더 좋은 방법들이 있을 수 있다.\\n개인적인 코딩 취향에 따라 작성하면 된다.</p>\",\"timeToRead\":3,\"excerpt\":\"최근에 개인적으로  Heroku  Free Tier를 이용하여 App을 배포하는 경우가 생겼는데 Puma + Sidekiq + Redis 환경을 설정하는데 좀 삽질을 한 경험이 있어 정리하고자 한다. Gem 설정 {% highlight ruby…\",\"frontmatter\":{\"title\":\"Heroku 환경에서 Sidekiq, Redis 이용하기\",\"cover\":\"images/heroku.jpg\",\"date\":\"2016-05-26T20:12:00.000Z\",\"category\":\"tech\",\"tags\":[\"sidekiq\",\"redis\",\"heroku\"],\"author\":\"wecanooo\"},\"fields\":{\"slug\":\"/heroku-환경에서-sidekiq-redis-이용하기\"}},\"prev\":{\"excerpt\":\" 이번 에피소드에서는  Github Pages 의 기능을 이용하여 간단한 블로그를 제작하는 방법을 알아보고자 한다. 많은 사람들이 블로그를 운영하기 위해서  Wordpress…\",\"frontmatter\":{\"title\":\"Github와 Jekyll을 이용한 무료 블로그 만들기 - 1\",\"cover\":\"images/cover7.jpg\",\"date\":\"2016-04-29\"},\"fields\":{\"slug\":\"/github와-jekyll을-이용한-무료-블로그-만들기-1\"}},\"next\":{\"excerpt\":\"원문 :  http://www.tiobe.com/tiobe_index 2016년 5월 TIOBE Index 헤드라인 : 루비가 과거 루비의 가장 높은 순위와 같아지다. 루비가 현재 TIOBE Index…\",\"frontmatter\":{\"title\":\"2016년 5월 TIOBE 순위\",\"cover\":\"images/cover6.jpg\",\"date\":\"2016-05-12T08:00:00.000Z\"},\"fields\":{\"slug\":\"/2016-년-5-월-tiobe-순위\"}},\"authors\":{\"edges\":[{\"node\":{\"id\":\"guinevere\",\"name\":\"Guinevere Kuiper\",\"image\":\"https://randomuser.me/api/portraits/women/17.jpg\",\"url\":\"https://randomuser.me/api/?seed=user1\",\"bio\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam laoreet lorem nec ligula aliquet, porta blandit augue luctus. Vivamus ac quam diam. Sed vestibulum pharetra hendrerit.\"}},{\"node\":{\"id\":\"wecanooo\",\"name\":\"Eric Jang\",\"image\":\"https://api.adorable.io/avatars/285/wecanooo@adorable.io.png\",\"url\":\"http://about.me/wecanooo\",\"bio\":\"루비온레일즈를 좋아하고, 여행을 좋아하는 개발자입니다.\"}},{\"node\":{\"id\":\"casper\",\"name\":\"Casper User\",\"image\":\"https://api.adorable.io/avatars/150/test.png\",\"url\":\"http://gatsbyjs.org/\",\"bio\":\"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\"}}]}},\"pathContext\":{\"slug\":\"/heroku-환경에서-sidekiq-redis-이용하기\",\"total\":6,\"prev\":\"/github와-jekyll을-이용한-무료-블로그-만들기-1\",\"next\":\"/2016-년-5-월-tiobe-순위\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---heroku-환경에서-sidekiq-redis-이용하기-d2af117226d7c82ca4c4.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>최근에 개인적으로 <a href=\\\"http://heroku.com/\\\">Heroku</a> Free Tier를 이용하여 App을 배포하는 경우가 생겼는데 Puma + Sidekiq + Redis 환경을 설정하는데 좀 삽질을 한 경험이 있어 정리하고자 한다.</p>\\n<h3 id=\\\"gem-설정\\\"><a href=\\\"#gem-%EC%84%A4%EC%A0%95\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Gem 설정</h3>\\n<p>{% highlight ruby %}\\ngem 'rails', '4.2.6'\\ngem 'puma', '~> 2.15'\\ngem 'sidekiq', '~> 4.0'\\n{% endhighlight %}</p>\\n<p>이전에 진행했었던 프로젝트에서는 puma 대신 unicorn을 이용했었는데, Heroku 환경에서는 puma가 default이고 최근 많이들 unicorn에서 puma로 넘어가는 추세인 것 같아 puma를 이용하기로 했다.</p>\\n<h3 id=\\\"프로그램-설정-및-heroku-설정\\\"><a href=\\\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EC%84%A4%EC%A0%95-%EB%B0%8F-heroku-%EC%84%A4%EC%A0%95\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>프로그램 설정 및 Heroku 설정</h3>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"configpumarb\\\"><a href=\\\"#configpumarb\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>config/puma.rb</h1>\\n<p>workers Integer(ENV['WEB_CONCURRENCY'] || 2)\\nthreads<em>count = Integer(ENV['MAX</em>THREADS'] || 5)\\nthreads threads<em>count, threads</em>count</p>\\n<p>preload_app!</p>\\n<p>rackup      DefaultRackup\\nport        ENV['PORT']     || 3000\\nenvironment ENV['RACK_ENV'] || 'development'</p>\\n<p>on<em>worker</em>boot do</p>\\n<h1 id=\\\"worker-specific-setup-for-rails-41\\\"><a href=\\\"#worker-specific-setup-for-rails-41\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Worker specific setup for Rails 4.1+</h1>\\n<h1 id=\\\"see-httpsdevcenterherokucomarticlesdeploying-rails-applications-with-the-puma-web-serveron-worker-boot\\\"><a href=\\\"#see-httpsdevcenterherokucomarticlesdeploying-rails-applications-with-the-puma-web-serveron-worker-boot\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>See: <a href=\\\"https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server#on-worker-boot\\\">https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server#on-worker-boot</a></h1>\\n<p>  @sidekiq<em>pid ||= spawn('bundle exec sidekiq -c 2 -q default -q mailer')\\nActiveRecord::Base.establish</em>connection\\nend</p>\\n<p>{% endhighlight %}</p>\\n<p>puma가 시작될 때 sidekiq을 몇 가지 옵션과 함께 실행도로록 했다. queue는 default, mailer queue를 생성했다.\\n이제 heroku에서 web instance를 실행하기 위해 Procfile을 작성할 차례이다.</p>\\n<p>예전에 unicorn 환경에서 배포를 할 때는 아래와 같이 web과 redis, worker를 별도로 돌렸었다.</p>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"procfile-with-unicorn--nginx--ubuntu-1404\\\"><a href=\\\"#procfile-with-unicorn--nginx--ubuntu-1404\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Procfile with unicorn + nginx + ubuntu 14.04</h1>\\n<p>web: rails s -b 0.0.0.0\\nredis: redis-server\\nworker: bundle exec sidekiq -C config/sidekiq.yml\\n{% endhighlight %}</p>\\n<p>지금은 Heroku에 배포할 것이기 때문에 redis-server는 Heroku redistogo add-on 으로 대체하고, sidekiq은 puma 시작 시 같이 실행하도록 할 것이기 때문에 Procfile은 좀 더 간단하게 유지할 수 있다.</p>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"procfile-with-puma--heroku\\\"><a href=\\\"#procfile-with-puma--heroku\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Procfile with puma + heroku</h1>\\n<p>web: bundle exec puma -C config/puma.rb\\n{% endhighlight %}</p>\\n<p>이제 위에서 말한 <a href=\\\"https://elements.heroku.com/addons/redistogo\\\">redistogo</a>를 설치하고 환경설정 값을 지정할 차례다.\\n터미널에서 아래의 명령을 실행하자. <a href=\\\"https://toolbelt.heroku.com/\\\">Heroku Toolbelt</a>는 이미 설치되어 있다고 가정한다.</p>\\n<p>{% highlight shell %}\\n$ heroku addons:create redistogo\\n$ heroku config:set REDIS<em>PROVIDER=REDISTOGO</em>URL\\n{% endhighlight %}</p>\\n<p>Heroku에 sidekiq + redis를 통해 ActiveJob을 돌릴 수 있는 준비는 되었고, ActiveJob Adapter를 sidekiq으로 지정하기 위해 ActiveJob Queue Adapter를 sidekiq으로 지정한다.</p>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"configapplicationrb\\\"><a href=\\\"#configapplicationrb\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>config/application.rb</h1>\\n<p>class Application &#x3C; Rails::Application</p>\\n<p>  config.active<em>job.queue</em>adapter = :sidekiq</p>\\n<p>end\\n{% endhighlight %}</p>\\n<h3 id=\\\"rails-코딩\\\"><a href=\\\"#rails-%EC%BD%94%EB%94%A9\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Rails 코딩</h3>\\n<p>환영 메일을 보내기 위한 Mailer 생성</p>\\n<p>{% highlight shell %}\\n$ rails generator mailer UserMailer\\n{% endhighlight %}</p>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"appmaileruser_mailerrb\\\"><a href=\\\"#appmaileruser_mailerrb\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>app/mailer/user_mailer.rb</h1>\\n<p>class UserMailer &#x3C; ApplicationMailer</p>\\n<p>  def welcome_email(user)\\n@user = user\\nmail to: @user.email, subject: t('email.welcome.subject') unless @user.email.empty?\\nend</p>\\n<p>end</p>\\n<p>{% endhighlight %}</p>\\n<p>환영메일 전송을 백그라운드에서 처리하기 위해 ActiveJob 생성</p>\\n<p>{% highlight shell %}\\n$ rails generator job welcome_email --queue mailer\\n{% endhighlight %}</p>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"appjobswelcomeemailjobrb\\\"><a href=\\\"#appjobswelcomeemailjobrb\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>app/jobs/welcome<em>email</em>job.rb</h1>\\n<p>class WelcomeEmailJob &#x3C; ActiveJob::Base\\nqueue_as :mailer</p>\\n<p>  def perform(user<em>id)\\nuser = User.find</em>by(id: user<em>id)\\nUserMailer.welcome</em>email(user).deliver_now if user\\nend\\nend</p>\\n<p>{% endhighlight %}</p>\\n<p>이제 최종적으로 회원가입을 통해 사용자가 생성되었을 경우 환영메일을 전송</p>\\n<p>{% highlight ruby %}</p>\\n<h1 id=\\\"appmodelsuserrb\\\"><a href=\\\"#appmodelsuserrb\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>app/models/user.rb</h1>\\n<p>class User &#x3C; ActiveRecord::Base</p>\\n<p>  after<em>create :process</em>after_create!</p>\\n<p>  private</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">def process_after_create!\\n  self.access_token = generate_access_token\\n  if save!\\n    # 환영메일 전송\\n    WelcomeEmailJob.perform_later(self.id)\\n  end\\nend\\n\\ndef generate_access_token\\n  loop do\\n    token = &quot;#{self.id}:#{Devise.friendly_token}&quot;\\n    break token unless User.where(access_token: token).first\\n  end\\nend</code></pre>\\n      </div>\\n<p>end</p>\\n<p>{% endhighlight %}</p>\\n<p>이메일을 비동기로 전송할 수 있는 방법은 위의 방법 외에도 더 좋은 방법들이 있을 수 있다.\\n개인적인 코딩 취향에 따라 작성하면 된다.</p>\",\"timeToRead\":3,\"excerpt\":\"최근에 개인적으로  Heroku  Free Tier를 이용하여 App을 배포하는 경우가 생겼는데 Puma + Sidekiq + Redis 환경을 설정하는데 좀 삽질을 한 경험이 있어 정리하고자 한다. Gem 설정 {% highlight ruby…\",\"frontmatter\":{\"title\":\"Heroku 환경에서 Sidekiq, Redis 이용하기\",\"cover\":\"images/heroku.jpg\",\"date\":\"2016-05-26T20:12:00.000Z\",\"category\":\"tech\",\"tags\":[\"sidekiq\",\"redis\",\"heroku\"],\"author\":\"wecanooo\"},\"fields\":{\"slug\":\"/heroku-환경에서-sidekiq-redis-이용하기\"}},\"prev\":{\"excerpt\":\" 이번 에피소드에서는  Github Pages 의 기능을 이용하여 간단한 블로그를 제작하는 방법을 알아보고자 한다. 많은 사람들이 블로그를 운영하기 위해서  Wordpress…\",\"frontmatter\":{\"title\":\"Github와 Jekyll을 이용한 무료 블로그 만들기 - 1\",\"cover\":\"images/cover7.jpg\",\"date\":\"2016-04-29\"},\"fields\":{\"slug\":\"/github와-jekyll을-이용한-무료-블로그-만들기-1\"}},\"next\":{\"excerpt\":\"원문 :  http://www.tiobe.com/tiobe_index 2016년 5월 TIOBE Index 헤드라인 : 루비가 과거 루비의 가장 높은 순위와 같아지다. 루비가 현재 TIOBE Index…\",\"frontmatter\":{\"title\":\"2016년 5월 TIOBE 순위\",\"cover\":\"images/cover6.jpg\",\"date\":\"2016-05-12T08:00:00.000Z\"},\"fields\":{\"slug\":\"/2016-년-5-월-tiobe-순위\"}},\"authors\":{\"edges\":[{\"node\":{\"id\":\"guinevere\",\"name\":\"Guinevere Kuiper\",\"image\":\"https://randomuser.me/api/portraits/women/17.jpg\",\"url\":\"https://randomuser.me/api/?seed=user1\",\"bio\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam laoreet lorem nec ligula aliquet, porta blandit augue luctus. Vivamus ac quam diam. Sed vestibulum pharetra hendrerit.\"}},{\"node\":{\"id\":\"wecanooo\",\"name\":\"Eric Jang\",\"image\":\"https://api.adorable.io/avatars/285/wecanooo@adorable.io.png\",\"url\":\"http://about.me/wecanooo\",\"bio\":\"루비온레일즈를 좋아하고, 여행을 좋아하는 개발자입니다.\"}},{\"node\":{\"id\":\"casper\",\"name\":\"Casper User\",\"image\":\"https://api.adorable.io/avatars/150/test.png\",\"url\":\"http://gatsbyjs.org/\",\"bio\":\"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\"}}]}},\"pathContext\":{\"slug\":\"/heroku-환경에서-sidekiq-redis-이용하기\",\"total\":6,\"prev\":\"/github와-jekyll을-이용한-무료-블로그-만들기-1\",\"next\":\"/2016-년-5-월-tiobe-순위\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/heroku-환경에서-sidekiq-redis-이용하기.json\n// module id = 462\n// module chunks = 150873816271854"],"sourceRoot":""}